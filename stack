#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define MAX 100

typedef struct {
    int items[MAX];
    int top;
} Stack;
// Функция для создания пустого стека
Stack* createStack() {
    Stack* stack = (Stack*)malloc(sizeof(Stack));
    stack->top = -1;
    return stack;
}
// Проверка пустой ли стек
int isEmpty(Stack* stack) {
    return stack->top == -1;
}
// Проверка полный ли стек
int isFull(Stack* stack) {
    return stack->top == MAX - 1;
}
// Добавление элемента в стек
void push(Stack* stack, int item) {
    if (isFull(stack)) {
        printf("Stack is full\n");
        return;
    }
    stack->items[++stack->top] = item;
    printf("%d Added to stack\n", item);
}

// Удаление элемента из стека
int pop(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return INT_MIN; 
    }
    return stack->items[stack->top--];
}
// Возврат верхнего элемента стека
int peek(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return INT_MIN;
    }
    return stack->items[stack->top];
}

int main() {
    Stack* stack = createStack();

    push(stack, 10);
    push(stack, 20);
    push(stack, 30);
    push(stack, 40);
    printf("%d taken from stack\n", pop(stack));
    printf("%d taken from stack\n", pop(stack));
    printf("Top element: %d\n", peek(stack));

    return 0;
}
